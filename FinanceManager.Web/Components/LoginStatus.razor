@using Microsoft.AspNetCore.Components
@rendermode InteractiveServer
@inject FinanceManager.Application.ICurrentUserService CurrentUser
@inject NavigationManager Nav
@inject IJSRuntime JS
    
@if (CurrentUser.IsAuthenticated)
{
    <div class="login-status">@CurrentUser.UserId<br />
        <button @onclick="LogoutAsync">Logout</button>
    </div>
}
else
{
    <div class="login-status"><a href="/login">Login</a></div>
}

@code {
    private async Task LogoutAsync()
    {
        var ok = await JS.InvokeAsync<bool>("fmAuthLogout");
        // Fallback: falls API nicht erreichbar, erzwungener Reload löscht serverseitig nicht gesetzte Cookies evtl. nicht, aber UI wird zur Login-Seite gehen
        Nav.NavigateTo("/login", forceLoad: true);
    }
}

@using FinanceManager.Shared.Dtos
@inject IHttpClientFactory ClientFactory
@inject Microsoft.Extensions.Localization.IStringLocalizer<FinanceManager.Web.Components.Pages.Setup> Localizer
@inject IServiceProvider Services
@using FinanceManager.Web.ViewModels
@using Microsoft.Extensions.DependencyInjection

<style>
.help-box {
    margin-top:1rem;
    padding:.75rem .9rem;
    background:#252a33;
    border:1px solid #3a404a;
    border-radius:6px;
    font-size:.78rem;
    line-height:1.35;
}
.help-box ul { margin:.4rem 0 .4rem 1.1rem; padding:0; }
.help-box li { margin:.15rem 0; }
.help-box em { font-style:normal; font-weight:600; }
</style>

<div>
    <h4 style="margin-top:0;">@Localizer["ImportSplit_TabTitle"]</h4>

    @if (_vm!.Loading)
    {
        <div>@Localizer["Msg_Loading"]</div>
    }
    else if (!string.IsNullOrWhiteSpace(_vm!.Error))
    {
        <div class="error">@_vm!.Error</div>
        <button class="icon-btn" @onclick="(()=> _vm!.LoadAsync())" title="@Localizer["Btn_Retry"]">
            <svg class="icon"><use href="icons/sprite.svg#refresh" /></svg>
        </button>
    }
    else if (_vm!.Model != null)
    {
        <EditForm Model="_vm!.Model" OnValidSubmit="SaveAsync">
            <DataAnnotationsValidator />
            <div class="form-grid">
                <div class="form-row">
                    <label>@Localizer["ImportSplit_Mode_Label"]</label>
                    <select @bind="_vm!.Model.Mode" @bind:after="(()=> _vm!.OnModeChanged())">
                        <option value="@ImportSplitMode.FixedSize">@Localizer["ImportSplit_Mode_FixedSize"]</option>
                        <option value="@ImportSplitMode.Monthly">@Localizer["ImportSplit_Mode_Monthly"]</option>
                        <option value="@ImportSplitMode.MonthlyOrFixed">@Localizer["ImportSplit_Mode_MonthlyOrFixed"]</option>
                    </select>
                </div>
                <div class="form-row">
                    <label>@Localizer["ImportSplit_MaxEntries"]</label>
                    <input type="number" min="1" @bind="_vm!.Model.MaxEntriesPerDraft" @bind:after="(()=> _vm!.Validate())" />
                </div>
                <div class="form-row" hidden="@(_vm!.Model.Mode != ImportSplitMode.MonthlyOrFixed)">
                    <label>@Localizer["ImportSplit_MonthlyThreshold"]</label>
                    <input type="number" min="1" @bind="_vm!.Model.MonthlySplitThreshold" @bind:after="(()=> _vm!.Validate())" />
                </div>
                <div class="form-row" hidden="@(_vm!.Model.Mode == ImportSplitMode.FixedSize)">
                    <label>@Localizer["ImportSplit_MinEntries"]</label>
                    <input type="number" min="1" @bind="_vm!.Model.MinEntriesPerDraft" @bind:after="(()=> _vm!.Validate())" />
                </div>
            </div>

            <div class="help-box">
                <strong>@Localizer["ImportSplit_Help_Title"]</strong>
                <ul>
                    <li><em>@Localizer["ImportSplit_Mode_FixedSize"]:</em> @Localizer["ImportSplit_Help_Mode_FixedSize"]</li>
                    <li><em>@Localizer["ImportSplit_Mode_Monthly"]:</em> @Localizer["ImportSplit_Help_Mode_Monthly"]</li>
                    <li><em>@Localizer["ImportSplit_Mode_MonthlyOrFixed"]:</em> @Localizer["ImportSplit_Help_Mode_Hybrid"]</li>
                </ul>
                <p style="margin:.4rem 0 .3rem;"><strong>@Localizer["ImportSplit_MaxEntries"]:</strong> @Localizer["ImportSplit_Help_MaxEntries"]</p>
                <p style="margin:.2rem 0;" hidden="@(_vm!.Model.Mode != ImportSplitMode.MonthlyOrFixed)">
                    <strong>@Localizer["ImportSplit_MonthlyThreshold"]:</strong> @Localizer["ImportSplit_Help_MonthlyThreshold"]
                </p>
                <p style="margin:.2rem 0;" hidden="@(_vm!.Model.Mode == ImportSplitMode.FixedSize)">
                    <strong>@Localizer["ImportSplit_MinEntries"]:</strong> @Localizer["ImportSplit_Help_MinEntries"]
                </p>
                <p style="margin-top:.4rem;opacity:.85;">@Localizer["ImportSplit_Help_Example"]</p>
            </div>

            @if (_vm!.ValidationMessage != null)
            {
                <div class="error" style="margin-top:.5rem;">@Localizer[_vm!.ValidationMessage]</div>
            }

            <div style="margin-top:1rem;display:flex;gap:.5rem;">
                <button type="submit" class="icon-btn" disabled="@(!_vm!.Dirty || _vm!.Saving || _vm!.HasValidationError)">
                    <svg class="icon"><use href="icons/sprite.svg#save" /></svg>
                </button>
                <button type="button" class="icon-btn" disabled="@(!_vm!.Dirty || _vm!.Saving)" title="@Localizer["Btn_Reset"]" @onclick="Reset">
                    <svg class="icon"><use href="icons/sprite.svg#undo" /></svg>
                </button>
            </div>

            @if (_vm!.SavedOk)
            {
                <div class="success" style="margin-top:.5rem;">@Localizer["ImportSplit_SaveSuccess"]</div>
            }
            else if (!string.IsNullOrWhiteSpace(_vm!.SaveError))
            {
                <div class="error" style="margin-top:.5rem;">@_vm!.SaveError</div>
            }
        </EditForm>
    }
</div>

@code {
    private SetupImportSplitViewModel? _vm;

    protected override async Task OnInitializedAsync()
    {
        _vm = ActivatorUtilities.CreateInstance<SetupImportSplitViewModel>(Services);
        _vm.StateChanged += (_, __) => { _ = InvokeAsync(StateHasChanged); };
        await _vm.InitializeAsync();
    }

    private Task SaveAsync() => _vm!.SaveAsync();

    private void Reset() => _vm!.Reset();
}

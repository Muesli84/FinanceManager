@page "/setup"
@rendermode InteractiveServer
@using FinanceManager.Shared.Dtos
@inject NavigationManager Navigation
@inject Microsoft.Extensions.Localization.IStringLocalizer<FinanceManager.Web.Components.Pages.Setup> Localizer

<PageTitle>@Localizer["PageTitle"]</PageTitle>

<h3>@Localizer["Heading"]</h3>

<BackgroundTaskStatusPanel TaskListEndpoint="/api/background-tasks/active" PollInterval="1500" AllowedTypes="new[]{ BackgroundTaskType.BackupRestore }" />

<div class="action-bar" style="margin-bottom:1rem;">
    <button class="icon-btn" @onclick="Back" title="@Localizer["Btn_Back"]">
        <svg class="icon"><use href="icons/sprite.svg#back"></use></svg>
    </button>
</div>

<div class="fm-tabs">
    <button class="fm-tab @(IsActiveTab(TabBackup)?"active":null)" @onclick="() => Activate(TabBackup)">@Localizer["Tab_Backup"]</button>
    <button class="fm-tab @(IsActiveTab(TabImportSplit)?"active":null)" @onclick="() => Activate(TabImportSplit)">@Localizer["ImportSplit_TabTitle"]</button>
    <button class="fm-tab @(IsActiveTab(TabLegacy)?"active":null)" @onclick="() => Activate(TabLegacy)">@Localizer["Tab_LegacyImport"]</button>
</div>

<div class="fm-tab-panel">
    @switch(_activeTab)
    {
        case TabBackup:
            <SetupBackupTab />
            break;
        case TabImportSplit:
            <SetupImportSplitTab />
            break;
        case TabLegacy:
            <SetupLegacyImportTab />
            break;
    }
</div>

<style>
    .fm-tabs { display:flex; gap:.25rem; margin-bottom:1rem; flex-wrap:wrap; }
    .fm-tab { background:#2a2d34; border:1px solid #3a3d45; padding:.45rem .9rem; cursor:pointer; font:inherit; color:#fff; border-radius:.35rem .35rem 0 0; }
    .fm-tab.active { background:#39404c; font-weight:600; }
    .fm-tab-panel { border:1px solid #3a3d45; padding:1rem; border-radius:0 .35rem .35rem .35rem; background:#2a2d34; }
</style>

@code {
    private const string TabBackup = "backup";
    private const string TabImportSplit = "import-split";
    private const string TabLegacy = "legacy";
    private string _activeTab = TabBackup;

    private void Activate(string tab)
    {
        if (_activeTab != tab)
        {
            _activeTab = tab;
        }
    }
    private bool IsActiveTab(string tab) => _activeTab == tab;
    private void Back() => Navigation.NavigateTo("/");
}
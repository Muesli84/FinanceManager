<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageTitle" xml:space="preserve">
    <value>Einrichtung</value>
  </data>
  <data name="Heading" xml:space="preserve">
    <value>Einrichtung &amp; Wartung</value>
  </data>
  <data name="Section_Backup" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="Btn_Back" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="Btn_CreateBackup" xml:space="preserve">
    <value>Backup erstellen</value>
  </data>
  <data name="Btn_UploadBackup" xml:space="preserve">
    <value>Backup hochladen</value>
  </data>
  <data name="Btn_Restore" xml:space="preserve">
    <value>Wiederherstellen</value>
  </data>
  <data name="Btn_CancelRestore" xml:space="preserve">
    <value>Wiederherstellung abbrechen</value>
  </data>
  <data name="Btn_Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Btn_Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Btn_Reset" xml:space="preserve">
    <value>Zurücksetzen</value>
  </data>
  <data name="Btn_Retry" xml:space="preserve">
    <value>Erneut versuchen</value>
  </data>
  <data name="Th_Created" xml:space="preserve">
    <value>Erstellt</value>
  </data>
  <data name="Th_File" xml:space="preserve">
    <value>Datei</value>
  </data>
  <data name="Th_Size" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="Th_Source" xml:space="preserve">
    <value>Quelle</value>
  </data>
  <data name="Th_Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="Th_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Msg_Loading" xml:space="preserve">
    <value>Lade ...</value>
  </data>
  <data name="Msg_NoBackups" xml:space="preserve">
    <value>Keine Backups vorhanden.</value>
  </data>
  <data name="Legacy_Import_Hint" xml:space="preserve">
    <value>Altes Setup-Importformat (veraltet)</value>
  </data>
  <data name="Legacy_ChooseFile" xml:space="preserve">
    <value>Datei wählen</value>
  </data>
  <data name="Legacy_File" xml:space="preserve">
    <value>Datei</value>
  </data>
  <data name="Legacy_ReplaceExisting" xml:space="preserve">
    <value>Bestehende Daten ersetzen</value>
  </data>
  <data name="Legacy_Import" xml:space="preserve">
    <value>Importieren</value>
  </data>
  <data name="Tab_Backup" xml:space="preserve">
    <value>Backups</value>
  </data>
  <data name="ImportSplit_TabTitle" xml:space="preserve">
    <value>Import-Aufteilung</value>
  </data>
  <data name="Tab_LegacyImport" xml:space="preserve">
    <value>Legacy Import</value>
  </data>
  <data name="ImportSplit_Mode_Label" xml:space="preserve">
    <value>Modus</value>
  </data>
  <data name="ImportSplit_Mode_FixedSize" xml:space="preserve">
    <value>Feste Größe</value>
  </data>
  <data name="ImportSplit_Mode_Monthly" xml:space="preserve">
    <value>Monatlich</value>
  </data>
  <data name="ImportSplit_Mode_MonthlyOrFixed" xml:space="preserve">
    <value>Monatlich (Schwellwert) / Feste Größe</value>
  </data>
  <data name="ImportSplit_MaxEntries" xml:space="preserve">
    <value>Max. Einträge pro Draft</value>
  </data>
  <data name="ImportSplit_MonthlyThreshold" xml:space="preserve">
    <value>Monatlicher Schwellwert</value>
  </data>
  <data name="ImportSplit_MinEntries" xml:space="preserve">
    <value>Min. Einträge pro Monats-Draft</value>
  </data>
  <data name="ImportSplit_SaveSuccess" xml:space="preserve">
    <value>Einstellungen gespeichert.</value>
  </data>
  <data name="ImportSplit_InvalidMaxMin20" xml:space="preserve">
    <value>Der Wert für Max. Einträge muss ≥ 20 sein.</value>
  </data>
  <data name="ImportSplit_InvalidThreshold" xml:space="preserve">
    <value>Der Schwellwert muss ≥ Max. Einträge sein.</value>
  </data>
  <data name="ImportSplit_InvalidMinEntries" xml:space="preserve">
    <value>Min. Einträge muss ≥ 1 sein.</value>
  </data>
  <data name="ImportSplit_InvalidMinGreaterMax" xml:space="preserve">
    <value>Min. Einträge muss ≤ Max. Einträge sein.</value>
  </data>
  <data name="ImportSplit_Help_Title" xml:space="preserve">
    <value>Hinweise zur Aufteilung</value>
  </data>
  <data name="ImportSplit_Help_MaxEntries" xml:space="preserve">
    <value>Begrenzt die Größe eines erzeugten Drafts. Wird immer genutzt im Modus „Feste Größe“ oder als Fallback im Hybrid-Modus.</value>
  </data>
  <data name="ImportSplit_Help_MonthlyThreshold" xml:space="preserve">
    <value>Nur Hybrid-Modus: Obergrenze für einen Monats-Draft. Wird sie überschritten, erfolgt automatische Aufteilung in Blöcke mit „Max. Einträge“.</value>
  </data>
  <data name="ImportSplit_Help_MinEntries" xml:space="preserve">
    <value>Minimale gewünschte Einträge für einen Monats-Draft. Kleinere Monate können mit Nachbarmonaten zusammengeführt werden, sofern Grenzen nicht verletzt werden.</value>
  </data>
  <data name="ImportSplit_Help_Mode_FixedSize" xml:space="preserve">
    <value>Jeder Draft hat höchstens die eingestellte Maximalgröße. Monatsgrenzen werden ignoriert.</value>
  </data>
  <data name="ImportSplit_Help_Mode_Monthly" xml:space="preserve">
    <value>Ein Draft je Kalendermonat – unabhängig von der Anzahl Einträge.</value>
  </data>
  <data name="ImportSplit_Help_Mode_Hybrid" xml:space="preserve">
    <value>Versucht Monats-Drafts. Nur wenn ein Monat den Schwellwert überschreitet, wird auf feste Blöcke (Max. Einträge) umgeschaltet.</value>
  </data>
  <data name="ImportSplit_Help_Example" xml:space="preserve">
    <value>Beispiel: Max=300, Schwellwert=1200. Ein Monat mit 950 Buchungen → Monats-Draft. Ein Monat mit 2.400 Buchungen → Fallback: 8 Drafts à 300.</value>
  </data>
  <data name="Ribbon_Back" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="Ribbon_Group_Navigation" xml:space="preserve">
    <value>Navigation</value>
  </data>
  <data name="Tab_IpBlocks" xml:space="preserve">
    <value>IP-Sperrliste</value>
  </data>
  <data name="Notifications_TabTitle" xml:space="preserve">
    <value>Benachrichtigungen</value>
  </data>
  <data name="Notifications_MonthlyReminder" xml:space="preserve">
    <value>Monatsabschluss-Hinweis aktivieren</value>
  </data>
  <data name="Notifications_MonthlyReminder_Help" xml:space="preserve">
    <value>Zeigt am letzten Werktag des Monats eine Erinnerung auf der Startseite.</value>
  </data>
  <data name="Notifications_SaveSuccess" xml:space="preserve">
    <value>Einstellungen gespeichert.</value>
  </data>
  <data name="Tab_Profile" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Tab_AttachmentCategories" xml:space="preserve">
    <value>Anhangkategorien</value>
  </data>
  <data name="AttachmentCategories_TabTitle" xml:space="preserve">
    <value>Anhangkategorien</value>
  </data>
  <data name="AttachmentCategories_Label_NewName" xml:space="preserve">
    <value>Neue Kategorie</value>
  </data>
  <data name="AttachmentCategories_Th_IsSystem" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="AttachmentCategories_NoEntries" xml:space="preserve">
    <value>Keine Kategorien vorhanden.</value>
  </data>
  <data name="AttachmentCategories_ActionSuccess" xml:space="preserve">
    <value>Aktion erfolgreich.</value>
  </data>
  <data name="Btn_Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
</root>